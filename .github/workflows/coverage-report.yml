name: coverage-report
on:
  pull_request:
    paths: ["**/*.py", "pytest.ini", ".github/workflows/coverage-report.yml"]
  workflow_dispatch:
jobs:
  cov:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.11" }
      - name: Install deps (best-effort)
        run: |
          pip install -U pip pytest pytest-cov || true
          if [ -f requirements.txt ]; then pip install -r requirements.txt || true; fi
          if [ -f pyproject.toml ]; then pip install uv && uv sync || true; fi
      - name: Install flaky helper
        run: pip install pytest-rerunfailures || true
      - name: Detect src path
        id: detect
        run: |
          if [ -d src ]; then echo "src=src" >> $GITHUB_OUTPUT; else echo "src=." >> $GITHUB_OUTPUT; fi
      - name: Run coverage (non-blocking, with reruns)
        env:
          PYTEST_ADDOPTS: "--reruns 2 --reruns-delay 1"   # ← 失敗テストを最大2回リトライ
        continue-on-error: true
        run: |
          pytest --cov=${{ steps.detect.outputs.src }} --cov-report=xml --cov-report=term-missing:skip-covered || true
      - name: Upload coverage.xml
        if: always()
        uses: actions/upload-artifact@v4
        with: { name: coverage-xml, path: coverage.xml, if-no-files-found: ignore }
      - name: Post summary
        if: always()
        run: |
          rate=$(grep 'line-rate' coverage.xml 2>/dev/null | sed -E 's/.*line-rate="([0-9.]+)".*/\1/' || echo "")
          pct=$([ -n "$rate" ] && python -c "print(round(float('$rate')*100,1))" || echo "N/A")
          echo "### Coverage: ${pct:-N/A}%" >> $GITHUB_STEP_SUMMARY